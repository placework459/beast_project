name: CI CD Docker Build and Push

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE_NAME: namrata
  HF_SPACE_REPO_URL: https://huggingface.co/spaces/Namratakghodke/nam

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags
          lfs: true      # Checkout LFS files

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Pytest with coverage and HTML report
        run: |
          mkdir -p reports
          pytest --cov=tests --cov-report=term --cov-report=html --cov-report=xml \
                 --html=reports/report.html --self-contained-html \
                 --junitxml=reports/reports.xml --cov-fail-under=85

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: reports/report.html

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: reports/reports.xml
          flags: unittests
          fail_ci_if_error: true
          verbose: true
          # Required if repo is private
          token: ${{ secrets.CODECOV_TOKEN }}

      # Optional SonarQube scan (uncomment if needed)
      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@v1
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_PROJECT_KEY: ${{ env.SONAR_PROJECT_KEY }}
      #     SONAR_ORGANIZATION: ${{ env.SONAR_ORGANIZATION }}
      #     SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}

      - name: Get Commit hash
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Docker Image with commit hash
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.vars.outputs.sha }} \
                       -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest .

      - name: Push Docker Image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.vars.outputs.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Install Git LFS and Push to Hugging Face Space
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          sudo apt-get update
          sudo apt-get install -y git-lfs
          git lfs install --system

          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

          echo "Setting remote for Hugging Face Space"
          git remote add huggingface https://oauth2:${HF_TOKEN}@${HF_SPACE_REPO_URL#https://}

          echo "Pushing to Hugging Face Space: ${{ env.HF_SPACE_REPO_URL }}"
          git push --force huggingface main

          echo "Successfully pushed to Hugging Face Space"
